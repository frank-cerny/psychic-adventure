// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bike_selling_app.Infrastructure.Persistence;

namespace bike_selling_app.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContextSqlite))]
    [Migration("20210711215913_test_migration")]
    partial class test_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CapitalItemProject", b =>
                {
                    b.Property<int>("capitalItemsid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("projectsid")
                        .HasColumnType("INTEGER");

                    b.HasKey("capitalItemsid", "projectsid");

                    b.HasIndex("projectsid");

                    b.ToTable("CapitalItemProject");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.Bike", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("datePurchased")
                        .HasColumnType("TEXT");

                    b.Property<string>("make")
                        .HasColumnType("TEXT");

                    b.Property<string>("model")
                        .HasColumnType("TEXT");

                    b.Property<int>("projectId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("purchasePrice")
                        .HasColumnType("REAL");

                    b.Property<string>("purchasedFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("serialNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("projectId")
                        .IsUnique();

                    b.HasIndex("serialNumber")
                        .IsUnique();

                    b.ToTable("Bikes");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.CapitalItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("cost")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("datePurchased")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("CapitalItems");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.NonCapitalItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("cost")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("datePurchased")
                        .HasColumnType("TEXT");

                    b.Property<int?>("projectid")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("projectid");

                    b.ToTable("NonCapitalItems");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateEnded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateStarted")
                        .HasColumnType("TEXT");

                    b.Property<double>("netValue")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.RevenueItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Projectid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("datePurchased")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateSold")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isPending")
                        .HasColumnType("INTEGER");

                    b.Property<string>("itemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("platformSoldOn")
                        .HasColumnType("TEXT");

                    b.Property<double>("salePrice")
                        .HasColumnType("REAL");

                    b.Property<double>("weight")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("Projectid");

                    b.ToTable("RevenueItems");
                });

            modelBuilder.Entity("CapitalItemProject", b =>
                {
                    b.HasOne("bike_selling_app.Domain.Entities.CapitalItem", null)
                        .WithMany()
                        .HasForeignKey("capitalItemsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bike_selling_app.Domain.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("projectsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.Bike", b =>
                {
                    b.HasOne("bike_selling_app.Domain.Entities.Project", "project")
                        .WithOne("bike")
                        .HasForeignKey("bike_selling_app.Domain.Entities.Bike", "projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.NonCapitalItem", b =>
                {
                    b.HasOne("bike_selling_app.Domain.Entities.Project", "project")
                        .WithMany("nonCapitalItems")
                        .HasForeignKey("projectid");

                    b.Navigation("project");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.RevenueItem", b =>
                {
                    b.HasOne("bike_selling_app.Domain.Entities.Project", null)
                        .WithMany("revenueItems")
                        .HasForeignKey("Projectid");
                });

            modelBuilder.Entity("bike_selling_app.Domain.Entities.Project", b =>
                {
                    b.Navigation("bike");

                    b.Navigation("nonCapitalItems");

                    b.Navigation("revenueItems");
                });
#pragma warning restore 612, 618
        }
    }
}
